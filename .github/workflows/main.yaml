name: Main
on:
  push:
    branches: ['master', 'main', 'epic/*']
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: valitydev/action-frontend/setup-install@v2
        with:
          npm-install-force: true
      - name: Build
        run: npm run build
      - name: Deploy image
        uses: valitydev/action-deploy-docker@v2
        with:
          registry-username: ${{ github.actor }}
          registry-access-token: ${{ secrets.GITHUB_TOKEN }}
      # - name: set config
      #   run: |
      #     printf "$APP_ENV_FILE" > dist/apps/control-center/browser/assets/appConfig.json
      #     printf "$AUTH_ENV_FILE" > dist/apps/control-center/browser/assets/authConfig.json
      #   env:
      #     APP_ENV_FILE: ${{secrets.APP_CONF}}
      #     AUTH_ENV_FILE: ${{secrets.AUTH_CONF}}
      # - name: Publish to CF Pages
      #   uses: cloudflare/pages-action@1
      #   with:
      #     apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      #     accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      #     projectName: 'cc'
      #     directory: 'dist/apps/control-center/browser'
      #     gitHubToken: ${{ secrets.GITHUB_TOKEN }}
      #     branch: main
      # - name: Publish MatEz Library
      #   uses: valitydev/action-frontend/publish@v1.0
      #   with:
      #     npm-token: ${{ secrets.NPM_TOKEN }}
      #     directory: ./dist/libs/matez
      # - name: Publish NgThrift Library
      #   uses: valitydev/action-frontend/publish@v1.0
      #   with:
      #     npm-token: ${{ secrets.NPM_TOKEN }}
      #     directory: ./dist/libs/ng-thrift
  notify:
    name: Notify
    runs-on: ubuntu-latest
    needs: [deploy]
    steps:
      - uses: actions/checkout@v4
      - uses: valitydev/action-mattermost-notify@v0
        with:
          webhook: ${{ secrets.MATTERMOST_WEBHOOK_URL }}
          channel: 'control-center-new'
          username: 'Frontend'
